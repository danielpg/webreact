{
  "service": {
    "service": "my-spa",
    "serviceObject": {
      "name": "my-spa"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetAllClientesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-spa-dev-getAllClientes"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "my-spa",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-spa-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-spa-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "my-spa",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetAllClientesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-spa/dev/1755038655193-2025-08-12T22:44:15.193Z/my-spa.zip"
              },
              "Handler": "api/handler.getAllClientes",
              "Runtime": "nodejs16.x",
              "FunctionName": "my-spa-dev-getAllClientes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetAllClientesLogGroup"
            ]
          },
          "GetAllClientesLambdaVersion0A5rkS1wZesIvlj439hJTUCk02KE8t5nTePwFs815c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllClientesLambdaFunction"
              },
              "CodeSha256": "5Ga/kbXTU4xe4DhuOJVEB3+sHuWic8JMAvKrZUlq0O4="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-my-spa",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GetAllClientesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllClientesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetAllClientes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetAllClientesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetClientes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /clientes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetAllClientes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetAllClientes"
          },
          "SpaBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "s3-dp-spa-dev-701491313159",
              "OwnershipControls": {
                "Rules": [
                  {
                    "ObjectOwnership": "BucketOwnerEnforced"
                  }
                ]
              },
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "IgnorePublicAcls": true,
                "BlockPublicPolicy": false,
                "RestrictPublicBuckets": false
              }
            }
          },
          "SpaBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "SpaBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": {
                      "Fn::Sub": "${SpaBucket.Arn}/*"
                    }
                  }
                ]
              }
            }
          },
          "SpaCloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
              "DistributionConfig": {
                "Enabled": true,
                "DefaultRootObject": "index.html",
                "Origins": [
                  {
                    "DomainName": {
                      "Fn::GetAtt": [
                        "SpaBucket",
                        "DomainName"
                      ]
                    },
                    "Id": "SpaS3Origin",
                    "S3OriginConfig": {}
                  }
                ],
                "DefaultCacheBehavior": {
                  "TargetOriginId": "SpaS3Origin",
                  "ViewerProtocolPolicy": "redirect-to-https",
                  "AllowedMethods": [
                    "GET",
                    "HEAD",
                    "OPTIONS"
                  ],
                  "CachedMethods": [
                    "GET",
                    "HEAD"
                  ],
                  "ForwardedValues": {
                    "QueryString": false
                  }
                },
                "CustomErrorResponses": [
                  {
                    "ErrorCode": 404,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  }
                ],
                "ViewerCertificate": {
                  "CloudFrontDefaultCertificate": true
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-my-spa-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetAllClientesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllClientesLambdaVersion0A5rkS1wZesIvlj439hJTUCk02KE8t5nTePwFs815c"
            },
            "Export": {
              "Name": "sls-my-spa-dev-GetAllClientesLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-my-spa-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-my-spa-dev-HttpApiUrl"
            }
          },
          "WebsiteURL": {
            "Description": "CloudFront URL to access the SPA REACT",
            "Value": {
              "Fn::Sub": "https://${SpaCloudFrontDistribution.DomainName}"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "siteBucket": "dp-spa-dev",
      "s3Sync": [
        {
          "bucketName": "s3-dp-spa-dev-701491313159",
          "localDir": "build"
        }
      ]
    },
    "plugins": [
      "serverless-s3-sync"
    ],
    "pluginsData": {},
    "functions": {
      "getAllClientes": {
        "handler": "api/handler.getAllClientes",
        "events": [
          {
            "httpApi": {
              "path": "/clientes",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/clientes"
          }
        ],
        "name": "my-spa-dev-getAllClientes",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "GetAllClientesLambdaVersion0A5rkS1wZesIvlj439hJTUCk02KE8t5nTePwFs815c"
      }
    },
    "resources": {
      "Resources": {
        "SpaBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "s3-dp-spa-dev-701491313159",
            "OwnershipControls": {
              "Rules": [
                {
                  "ObjectOwnership": "BucketOwnerEnforced"
                }
              ]
            },
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "IgnorePublicAcls": true,
              "BlockPublicPolicy": false,
              "RestrictPublicBuckets": false
            }
          }
        },
        "SpaBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "SpaBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Sub": "${SpaBucket.Arn}/*"
                  }
                }
              ]
            }
          }
        },
        "SpaCloudFrontDistribution": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Enabled": true,
              "DefaultRootObject": "index.html",
              "Origins": [
                {
                  "DomainName": {
                    "Fn::GetAtt": [
                      "SpaBucket",
                      "DomainName"
                    ]
                  },
                  "Id": "SpaS3Origin",
                  "S3OriginConfig": {}
                }
              ],
              "DefaultCacheBehavior": {
                "TargetOriginId": "SpaS3Origin",
                "ViewerProtocolPolicy": "redirect-to-https",
                "AllowedMethods": [
                  "GET",
                  "HEAD",
                  "OPTIONS"
                ],
                "CachedMethods": [
                  "GET",
                  "HEAD"
                ],
                "ForwardedValues": {
                  "QueryString": false
                }
              },
              "CustomErrorResponses": [
                {
                  "ErrorCode": 404,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                }
              ],
              "ViewerCertificate": {
                "CloudFrontDefaultCertificate": true
              }
            }
          }
        }
      },
      "Outputs": {
        "WebsiteURL": {
          "Description": "CloudFront URL to access the SPA REACT",
          "Value": {
            "Fn::Sub": "https://${SpaCloudFrontDistribution.DomainName}"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "my-spa",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "outputs": {
        "HttpApiUrl": {
          "Description": "HTTP API endpoint URL",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.us-east-1.amazonaws.com"
              ]
            ]
          }
        }
      }
    },
    "layers": {},
    "outputs": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"outputs\"]"
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/danielp/myapps/aje-reto/webreact/.serverless/my-spa.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/my-spa/dev/1755038655193-2025-08-12T22:44:15.193Z",
    "artifact": "my-spa.zip"
  }
}